@using Entities.Concrete
@model ApplicationUser

@using Microsoft.AspNetCore.Identity;
@using Business.Abstract;
@inject SignInManager<ApplicationUser> _signInManager;
@inject IApplicationUserService _applicationUserService;
@inject IFollowerService _followService;
@inject IImageService _imageService;
@{
    string id = _applicationUserService.GetUserIdByName(Model.UserName).Data;
    string? pp = _applicationUserService.GetById(id).Data.PPPath;
    pp = "images/pp/" + pp;
    string _id = _applicationUserService.GetUserIdByName(User.Identity.Name).Data;
}

<div class="container h-50">
    <div class="row h-100">
        <div class="col-4 d-flex justify-content-center align-items-center">
            <span class="user-pp-border rounded-circle "><img class="rounded-circle user-pp" src="@Url.Content(@pp)" /></span>
        </div>
        <div id="user-info" class="col-8 d-flex justify-content-center" style="flex-direction:column">
            <div class="d-flex justify-content-sm-around">
                <div>@Model.UserName</div>
                <div class="d-flex w-50 justify-content-center">
                    @if(User.Identity.Name == Model.UserName)
                    {
                        <a class="nav-link d-flex text-info" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="material-icons">settings</i></a>
                    }
                    else{
                        if(!_followService.IsFollow(_id , id).Success){
                            <a class="btn btn-primary w-50" href="@Url.Action("FollowUser","User",new {UserId=_id , FollowedUserId=id , FollowedUser=Model.UserName})">Follow</a>
                        }
                        else{
                            <a class="btn btn-light w-50" href="@Url.Action("UnFollowUser","User",new {UserId=_id , FollowedUserId=id , FollowedUser=Model.UserName})">UnFollow</a>
                        }
                    }
                </div>
            </div>
            <hr class="opacity-0" />
            <div class="d-flex justify-content-around w-75">
                <hr class="opacity-0" style="width:10%" />
                <div>@_applicationUserService.GetPostCount(id).Data Gönderi</div>
                <div>@_applicationUserService.GetFollowerCount(id).Data Takipçi</div>
                <div>@_applicationUserService.GetFollowingCount(id).Data Takip</div>
                <hr class="opacity-0" style="width:10%" />
            </div>
        </div>
    </div>
</div>
<hr class="w-75 m-auto" />
<div class="row mt-2 posts justify-content-center">
    @{
        List<Image> images = _imageService.GetByUserId(id).Data;
        foreach (Image image in images)
        {
                <div class="col-4 post text-center">
                    <img class="" src="@Url.Content("images/uploads/" + image.Path)" />
                </div>
        }
    }
    
</div>

@*@{
    string FollowUser(){
        _followService.Add(new Follower{UserId=_id , FollowedUserId=id});
        return "";
    }

    void UnFollowUser(){
        _followService.DeleteByUserAndFollowedUserId(_id, id);
    }
}*@
